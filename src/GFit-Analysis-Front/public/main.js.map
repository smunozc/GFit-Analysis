{"version":3,"sources":["./src/environments/environment.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/page404/page404.component.ts","./src/app/page404/page404.component.html","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/services/auth.service.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,cAAc,EAAE;QACd,MAAM,EAAE,yCAAyC;QACjD,UAAU,EAAE,+BAA+B;QAC3C,SAAS,EAAE,eAAe;QAC1B,aAAa,EAAE,2BAA2B;QAC1C,iBAAiB,EAAE,cAAc;QACjC,KAAK,EAAE,2CAA2C;QAClD,aAAa,EAAE,cAAc;KAC9B;CACF,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;ACjB5D,MAAM,kBAAkB;IAE7B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;oFALU,kBAAkB;kGAAlB,kBAAkB;QCP/B,oEAAG;QAAA,2EAAgB;QAAA,4DAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;ICCnB,sEAAsB;IAClB,2EAAqC;IACzC,4DAAM;;;IAHV,sEAAuB;IACnB,8GAEM;IAEN,2EAA+B;IACnC,4DAAM;;;IALI,0DAAc;IAAd,iFAAc;;ACSjB,MAAM,YAAY;IAEvB,YAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAEpE,UAAK,GAAG,qBAAqB,CAAC;QAC9B,aAAQ,GAAY,KAAK,CAAC;QAC1B,cAAS,GAAY,KAAK,CAAC;IAJ6C,CAAC;IAMzE,QAAQ;QACN,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACzC,IAAI,IAAI,EAAE;gBACR,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;gBAC9B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;aACrC;iBAAM;gBACL,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;gBAC/B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAChC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;aACvB;YACD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC;;wEAzBU,YAAY;4FAAZ,YAAY;QDVzB,wGAMM;;QANA,+EAAe;;;;;;;;;;;;;;AEArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiD;AACO;AACE;AACb;AAGE;AACa;AACH;AACY;AACN;AAEL;;;AAmBnD,MAAM,SAAS;;kEAAT,SAAS;yFAAT,SAAS,cAFR,2DAAY;8FADb,EAAE,YANJ;YACP,+DAAiB,CAAC,aAAa,CAAC,qEAAW,CAAC,cAAc,CAAC;YAC3D,oEAAgB;YAChB,uEAAa;YACb,0DAAW;SACZ;oIAIU,SAAS,mBAflB,2DAAY;QACZ,wEAAe;QACf,qEAAc;QACd,iFAAkB;QAClB,2EAAgB,8EAIhB,oEAAgB;QAChB,uEAAa;QACb,0DAAW;;;;;;;;;;;;;;;;;ACnBR,MAAM,gBAAgB;IAE3B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;gFALU,gBAAgB;gGAAhB,gBAAgB;QCP7B,oEAAG;QAAA,yEAAc;QAAA,4DAAI;;;;;;;;;;;;;;;;;;ACOd,MAAM,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8EALU,eAAe;+FAAf,eAAe;QCP5B,oEAAG;QAAA,wEAAa;QAAA,4DAAI;;;;;;;;;;;;;;ACEpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;AACD;;;AAK7B,MAAM,WAAW;IAEtB,YAAoB,MAAuB;QAAvB,WAAM,GAAN,MAAM,CAAiB;IAAI,CAAC;IAEhD,YAAY,KAAK,CAAC;IAElB,WAAW;QACT,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,IAAI,oDAAQ,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC,IAAI,CACtE,CAAC,MAAM,EAAE,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;YAC1D,YAAY,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;QACxE,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,uDAAuD;YACvD,uEAAuE;YACvE,uBAAuB;YACvB,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;YACxB,6BAA6B;YAC7B,IAAI,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC;YAClC,kEAAkE;YAClE,0CAA0C;YAC1C,IAAI,KAAK,CAAC,IAAI,KAAK,+CAA+C,EAAE;gBAClE,IAAI,CAAC,MAAM,CAAC,0BAA0B,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAU,SAAS;oBACpE,gEAAgE;oBAChE,oEAAoE;oBACpE,0DAA0D;gBAC5D,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;IAC/B,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;IACvD,CAAC;;sEAvCU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;ACLpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACc;AACZ;AACM;;;AAE/D,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,iFAAkB,EAAE;IAC3C,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,iFAAkB,EAAE;IACpD,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,2EAAgB,EAAE;CAC5C,CAAC;AAMK,MAAM,gBAAgB;;gFAAhB,gBAAgB;+FAAhB,gBAAgB;mGAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;;;;;;;;;ACPjB,MAAM,cAAc;IAEzB,YAAmB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEhD,QAAQ;IAER,CAAC;IAED,KAAK;QACH,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;IACjC,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;IAChC,CAAC;;4EAdU,cAAc;8FAAd,cAAc;QCR3B,yEAAqB;QACnB,yEAAuB;QACrB,qEAAI;QAAA,kEAAO;QAAA,4DAAK;QAChB,0EAAmB;QAMjB,qEAAI;QAAA,sEAAW;QAAA,4DAAK;QACpB,4EAAwD;QAAhD,sIAAS,WAAO,IAAC;QAA+B,kEAA4B;QAAA,iEAAM;QAAA,4DAAS;QACrG,4DAAO;QACT,4DAAM;QAEN,yEAAuB;QACrB,iEAAS;QACT,iEAAS;QACT,iEAAS;QACT,iEAAS;QACT,iEAAS;QACT,iEAAS;QACT,iEAAS;QACT,iEAAS;QACT,iEAAS;QACT,iEAAS;QACX,4DAAK;QACP,4DAAM;;;;;;;;;;;;;;;;;;;;AC1ByC;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  fireBaseConfig: {\n    apiKey: \"AIzaSyB49wFoyiYDJbPp4u0bu4FkIGJtUHH9OfA\",\n    authDomain: \"gfit-analysis.firebaseapp.com\",\n    projectId: \"gfit-analysis\",\n    storageBucket: \"gfit-analysis.appspot.com\",\n    messagingSenderId: \"462858263236\",\n    appId: \"1:462858263236:web:aaafd7e57661c883198791\",\n    measurementId: \"G-F9SK8KCZ2P\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>dashboard works!</p>\r\n","<div *ngIf=\"isChecked\">\n    <div *ngIf=\"isLogged\">\n        <app-navbar id=\"navbar\"></app-navbar>\n    </div>\n    \n    <router-outlet></router-outlet>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './services/auth.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  title = 'GFit-Analysis-Front';\n  isLogged: boolean = false;\n  isChecked: boolean = false;\n\n  ngOnInit(): void {\n    this.getCurrentUser();\n  }\n\n  getCurrentUser() {\n    this.authService.isAuth().subscribe(auth => {\n      if (auth) {\n        console.log(\"user logged in\");\n        this.isLogged = true;\n        this.router.navigate(['dashboard']);\n      } else {\n        console.log(\"user not logged\");\n        this.router.navigate(['login']);\n        this.isLogged = false;\n      }\n      this.isChecked = true;\n    });\n  }\n}\n","import { AngularFireModule } from '@angular/fire'\nimport { AppRoutingModule } from './app-routing.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { Page404Component } from './page404/page404.component';\n\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    DashboardComponent,\n    Page404Component\n  ],\n  imports: [\n    AngularFireModule.initializeApp(environment.fireBaseConfig),\n    AppRoutingModule,\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page404',\n  templateUrl: './page404.component.html',\n  styleUrls: ['./page404.component.css']\n})\nexport class Page404Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>page404 works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>navbar works!</p>\n","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { map } from 'rxjs/operators';\nimport firebase from 'firebase/app';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private afAuth: AngularFireAuth) { }\n\n  registerUser() { }\n\n  loginGoogle() { \n    this.afAuth.signInWithPopup(new firebase.auth.GoogleAuthProvider()).then(\n      (result) => {\n        console.log(result);\n        localStorage.setItem('user', JSON.stringify(result.user));\n        localStorage.setItem('credential', JSON.stringify(result.credential));\n      },\n      (error) => {\n        // The provider's account email, can be used in case of\n        // auth/account-exists-with-different-credential to fetch the providers\n        // linked to the email:\n        let email = error.email;\n        // The provider's credential:\n        let credential = error.credential;\n        // In case of auth/account-exists-with-different-credential error,\n        // you can fetch the providers using this:\n        if (error.code === 'auth/account-exists-with-different-credential') {\n          this.afAuth.fetchSignInMethodsForEmail(email).then(function (providers) {\n            // The returned 'providers' is a list of the available providers\n            // linked to the email address. Please refer to the guide for a more\n            // complete explanation on how to recover from this error.\n          });\n        }\n      }\n    );\n  }\n\n  logoutUser() {\n    return this.afAuth.signOut();\n  }\n\n  isAuth() {\n    return this.afAuth.authState.pipe(map(auth => auth));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { LoginComponent } from './login/login.component';\nimport { Page404Component } from './page404/page404.component';\n\nconst routes: Routes = [\n  { path: '', component: DashboardComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'dashboard', component: DashboardComponent },\n  { path: '**', component: Page404Component }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(public authService: AuthService) { }\n\n  ngOnInit(): void {\n\n  }\n\n  login() {\n    this.authService.loginGoogle();\n  }\n\n  logout() {\n    this.authService.logoutUser();\n  }\n\n}\n","<div class=\"wrapper\">\n  <div class=\"container\">\n    <h1>Welcome</h1>\n    <form class=\"form\">\n      <!--\n\t\t\t<input type=\"text\" placeholder=\"Username\">\n\t\t\t<input type=\"password\" placeholder=\"Password\">\n\t\t\t<button type=\"submit\" id=\"login-button\">Login</button>\n\t\t\t-->\n      <h3>Log in with</h3>\n      <button (click)=\"login()\" class=\"btn-social btn-google\"><i class=\"bi bi-google\"></i>Google</button>\n    </form>\n  </div>\n\n  <ul class=\"bg-bubbles\">\n    <li></li>\n    <li></li>\n    <li></li>\n    <li></li>\n    <li></li>\n    <li></li>\n    <li></li>\n    <li></li>\n    <li></li>\n    <li></li>\n  </ul>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}